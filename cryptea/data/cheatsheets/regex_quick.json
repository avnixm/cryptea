{
  "title": "Regex Quick Reference",
  "category": "General",
  "description": "Common regular expression patterns and metacharacters",
  "searchable": true,
  "type": "table",
  "columns": ["Pattern", "Meaning", "Example"],
  "entries": [
    {"pattern": ".", "meaning": "Any single character", "example": "a.c matches 'abc', 'a1c'"},
    {"pattern": "^", "meaning": "Start of string", "example": "^Hello matches 'Hello World'"},
    {"pattern": "$", "meaning": "End of string", "example": "World$ matches 'Hello World'"},
    {"pattern": "*", "meaning": "0 or more occurrences", "example": "ab*c matches 'ac', 'abc', 'abbc'"},
    {"pattern": "+", "meaning": "1 or more occurrences", "example": "ab+c matches 'abc', 'abbc'"},
    {"pattern": "?", "meaning": "0 or 1 occurrence", "example": "ab?c matches 'ac', 'abc'"},
    {"pattern": "{n}", "meaning": "Exactly n occurrences", "example": "a{3} matches 'aaa'"},
    {"pattern": "{n,}", "meaning": "n or more occurrences", "example": "a{2,} matches 'aa', 'aaa'"},
    {"pattern": "{n,m}", "meaning": "Between n and m", "example": "a{2,4} matches 'aa', 'aaa', 'aaaa'"},
    {"pattern": "[abc]", "meaning": "Character class", "example": "[aeiou] matches any vowel"},
    {"pattern": "[^abc]", "meaning": "Negated character class", "example": "[^0-9] matches non-digits"},
    {"pattern": "[a-z]", "meaning": "Character range", "example": "[a-z] matches lowercase letters"},
    {"pattern": "\\d", "meaning": "Any digit [0-9]", "example": "\\d{4} matches '2024'"},
    {"pattern": "\\D", "meaning": "Any non-digit", "example": "\\D+ matches 'Hello'"},
    {"pattern": "\\w", "meaning": "Word character [a-zA-Z0-9_]", "example": "\\w+ matches 'hello123'"},
    {"pattern": "\\W", "meaning": "Non-word character", "example": "\\W+ matches '!!!'"},
    {"pattern": "\\s", "meaning": "Whitespace", "example": "\\s+ matches spaces/tabs"},
    {"pattern": "\\S", "meaning": "Non-whitespace", "example": "\\S+ matches 'word'"},
    {"pattern": "|", "meaning": "Alternation (OR)", "example": "cat|dog matches 'cat' or 'dog'"},
    {"pattern": "()", "meaning": "Capture group", "example": "(\\d+) captures digits"},
    {"pattern": "(?:)", "meaning": "Non-capturing group", "example": "(?:abc)+ matches 'abcabc'"},
    {"pattern": "(?=)", "meaning": "Positive lookahead", "example": "\\w+(?=.txt) matches 'file' in 'file.txt'"},
    {"pattern": "(?!)", "meaning": "Negative lookahead", "example": "\\w+(?!.txt) matches 'file' not before '.txt'"},
    {"pattern": "\\b", "meaning": "Word boundary", "example": "\\bcat\\b matches 'cat' but not 'category'"},
    {"pattern": "\\B", "meaning": "Non-word boundary", "example": "\\Bcat\\B matches 'cat' in 'scatter'"}
  ]
}
